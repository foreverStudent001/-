// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

import 'env.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
              'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
              'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: Env.firebaseWebApiKey,
    appId: Env.firebaseWebAppId,
    messagingSenderId: Env.firebaseWebSenderId,
    projectId: Env.firebaseWebProjectId,
    authDomain: Env.firebaseWebAuthDomain,
    databaseURL: Env.firebaseWebDatabaseUrl,
    storageBucket: Env.firebaseWebStorageBucket,
    measurementId: Env.firebaseWebMeasurementId,
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: Env.firebaseAndroidApiKey,
    appId: Env.firebaseAndroidAppId,
    messagingSenderId: Env.firebaseAndroidSenderId,
    projectId: Env.firebaseAndroidProjectId,
    databaseURL: Env.firebaseAndroidDatabaseUrl,
    storageBucket: Env.firebaseAndroidStorageBucket,
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: Env.firebaseIosApiKey,
    appId: Env.firebaseIosAppId,
    messagingSenderId: Env.firebaseIosSenderId,
    projectId: Env.firebaseIosProjectId,
    databaseURL: Env.firebaseIosDatabaseUrl,
    storageBucket: Env.firebaseIosStorageBucket,
    iosBundleId: Env.firebaseIosBundleId,
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: Env.firebaseMacosApiKey,
    appId: Env.firebaseMacosAppId,
    messagingSenderId: Env.firebaseMacosSenderId,
    projectId: Env.firebaseMacosProjectId,
    databaseURL: Env.firebaseMacosDatabaseUrl,
    storageBucket: Env.firebaseMacosStorageBucket,
    iosBundleId: Env.firebaseMacosBundleId,
  );
}